name: Push Main to Development with GPG signing

on:
  push:
    branches:
      - 'Main-(Production)'  # Trigger the workflow when changes are pushed to 'Main-(Production)'

jobs:
  push_to_development:
    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure Git global identity
        run: |
          git config --global user.email "nickm@loadtoadnetworks.com"
          git config --global user.name "McSwizzleStix"

      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > gpg.key
          gpg --import gpg.key
          rm gpg.key

      - name: Set up Git to use GPG signing
        run: |
          git config --global user.signingkey D35AB1837D40E00B
          git config --global commit.gpgsign true

      - name: Fetch latest changes
        run: git fetch --prune

      - name: Push changes to branches with GPG signing
        run: |
          # Initialize an array to store conflict information
          conflicts=()
          handle_error() {
            echo "Error: $1"
            conflicts+=("$1")
          }

          git checkout Development || handle_error "Failed to switch to 'Development' branch."

          # Check if there are changes between 'Main-(Production)' and 'Development'
          if git diff --quiet 'Main-(Production)'..HEAD; then
            echo "No new changes to merge."
          else
            # Attempt to pull changes from 'Main-(Production)' to 'Development' and allow unrelated histories
            if ! git pull --no-rebase --allow-unrelated-histories origin 'Main-(Production)'; then
              echo "Conflicts detected. Resolving conflicts..."

              # Automatically resolve conflicts by favoring incoming changes
              git checkout --theirs . || handle_error "Failed to favor incoming changes."
              git add . || handle_error "Failed to stage changes."
              git commit -S -m "Merge 'Main-(Production)' into 'Development' (auto-resolved conflicts)" || handle_error "Failed to commit changes."

              # Force push the resolved changes to 'Development' with GPG signing
              git push --force origin Development || handle_error "Failed to force push changes to 'Development' branch."
            fi
          fi

          # Check for conflicts
          if [ ${#conflicts[@]} -gt 0 ]; then
            echo "Conflicts encountered during the process:"
            for conflict in "${conflicts[@]}"; do
              echo "- $conflict"
            done
            exit 1  # Exit with an error code
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
